name: Hedge Consume
on:
  repository_dispatch:
    types: [hedge-results]
  workflow_dispatch:
    inputs:
      lane_id: { required: false, type: string, default: "laneA-stable-arb" }
      status:  { required: false, type: string, default: "yellow" }
      results_json: { required: false, type: string, default: "" } # optional manual payload

permissions:
  contents: write

jobs:
  consume:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0
          path: pages
          token: ${{ secrets.GH_PAGES_TOKEN }}

      - name: Resolve payload (dispatch vs manual)
        id: p
        shell: bash
        run: |
          echo "DATE=$(date -u +%F)" >> $GITHUB_OUTPUT
          echo "NOW=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            payload='${{ toJson(github.event.client_payload) }}'
            echo "$payload" > /tmp/p.json
          else
            jq -n --arg lane "${{ inputs.lane_id }}" \
                  --arg status "${{ inputs.status }}" \
                  --arg now "$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
                  --argjson metrics '{}' \
                  --argjson thresholds '{}' \
                  --argjson annotations '{}' \
                  --arg footer "[[GENESIS_STATUS component=\"Hedge\" task=\"manual\"]]" \
                  '{lane_id:$lane,status:$status,last_run_at:$now,metrics:$metrics,thresholds:$thresholds,annotations:$annotations,footer_token:$footer}' > /tmp/p.json
            if [ -n "${{ inputs.results_json }}" ]; then
              printf '%s' "${{ inputs.results_json }}" > /tmp/p.json
            fi
          fi
          echo "LANE_ID=$(jq -r .lane_id /tmp/p.json)" >> $GITHUB_OUTPUT
          echo "STATUS=$(jq -r .status /tmp/p.json)"   >> $GITHUB_OUTPUT

      - name: Ensure folders
        run: |
          mkdir -p pages/pulse/${{ steps.p.outputs.DATE }}
          mkdir -p pages/pulse/results

      - name: Write lane results + update latest.json
        run: |
          lane="${{ steps.p.outputs.LANE_ID }}"
          out="pages/pulse/results/${lane}.json"
          jq '.' /tmp/p.json > "$out"
          jq -n --arg date "${{ steps.p.outputs.DATE }}" \
                --arg path "pulse/${{ steps.p.outputs.DATE }}/run.json" \
                --arg now "${{ steps.p.outputs.NOW }}" \
                --arg last "Hedge/${lane}" \
                '{date:$date, path:$path, last_updated:$now, last_event:$last}' > pages/pulse/latest.json

      - name: Append event to today's run.json
        run: |
          file="pages/pulse/${{ steps.p.outputs.DATE }}/run.json"
          [ -f "$file" ] || echo "[]" > "$file"
          tmp=$(mktemp)
          jq --arg comp "Hedge" \
             --arg task "${{ steps.p.outputs.LANE_ID }}" \
             --arg status "${{ steps.p.outputs.STATUS }}" \
             --arg now "${{ steps.p.outputs.NOW }}" \
             --arg footer "[[GENESIS_STATUS component=\"Hedge\" task=\"${{ steps.p.outputs.LANE_ID }}\"]]" \
             --slurpfile evt /tmp/p.json \
             '. + [ $evt[0] + {component:$comp, task:$task, status:$status, created_at:$now, footer_token:$footer} ]' \
             "$file" > "$tmp"
          mv "$tmp" "$file"

      - name: Commit & push
        working-directory: pages
        run: |
          git config user.name "pulse-bot"
          git config user.email "pulse-bot@users.noreply.github.com"
          git add pulse
          git commit -m "Hedge consume: ${{ steps.p.outputs.LANE_ID }} @ ${{ steps.p.outputs.NOW }}" || echo "No changes"
          git push origin gh-pages

      - name: Echo URLs
        run: |
          echo "LATEST: https://twocats-network.github.io/twocats-network-status/pulse/latest.json"
          echo "LANE:   https://twocats-network.github.io/twocats-network-status/pulse/results/${{ steps.p.outputs.LANE_ID }}.json"
          echo "RUN:    https://twocats-network.github.io/twocats-network-status/pulse/${{ steps.p.outputs.DATE }}/run.json"
