name: Hedge Consumer

on:
  workflow_dispatch:
    inputs:
      lane:
        description: "A or B"
        required: true
        default: "A"
      results_url:
        description: "Public JSON URL (optional)"
        required: false
      inline_json:
        description: "Paste results JSON (optional)"
        required: false
      env_target:
        description: "dev|staging|prod"
        required: true
        default: "staging"

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: pages
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve payload
        run: |
          if [ -n "${{ github.event.inputs.results_url }}" ]; then
            curl -sSL "${{ github.event.inputs.results_url }}" -o results.json
          elif [ -n "${{ github.event.inputs.inline_json }}" ]; then
            echo '${{ github.event.inputs.inline_json }}' > results.json
          else
            echo "results_url or inline_json required" >&2
            exit 1
          fi

      - name: Validate results
        run: |
          jq -e 'has("lane") and has("timestamp") and has("risk_state") and has("metrics") and has("scenarios")' results.json > /dev/null

      - name: Transform to Pulse JSON
        run: |
          jq '{version:"1.0", lane, timestamp, readiness:(.risk_state | ascii_downcase), metrics, scenarios, thresholds:(.thresholds // {}), provenance:(.provenance // {}), notes:{triggers:.triggers, actions:.actions}}' results.json > pulse.json

      - name: Publish lane data
        run: |
          lane=${{ github.event.inputs.lane }}
          mkdir -p pages/pulse/data/hedge/lane${lane}
          cp pulse.json pages/pulse/data/hedge/lane${lane}/latest.json

      - name: Update environment annotations
        run: |
          lane=${{ github.event.inputs.lane }}
          env=${{ github.event.inputs.env_target }}
          file="pages/pulse/${env}/latest.json"
          if [ ! -f "$file" ]; then
            mkdir -p "$(dirname "$file")"
            cat <<'JSON' > "$file"
{
  "prod_flags": false,
  "outputs": "json_only",
  "include_annotations": true,
  "annotations": {"hedge": {}}
}
JSON
          fi
          jq --arg lane "$lane" --arg path "pulse/data/hedge/lane${lane}/latest.json" \
            '.annotations.hedge[$lane] = $path | .last_updated = (now | todateiso8601)' "$file" > "$file.tmp"
          mv "$file.tmp" "$file"

      - name: Commit and push
        run: |
          cd pages
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add pulse/data/hedge/lane${{ github.event.inputs.lane }}/latest.json pulse/${{ github.event.inputs.env_target }}/latest.json
          git commit -m "Hedge lane${{ github.event.inputs.lane }} update" || echo "No changes to commit"
          git push origin gh-pages
